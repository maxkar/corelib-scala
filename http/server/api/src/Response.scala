package io.github.maxkar
package http.server.api

import http.headers.Headers


/** Http Response generated by the server. */
class Response(
      val status: Int,
      val headers: Headers = Headers.empty,
      val content: Array[Byte] = null,
    )


object Response:

  /** Creates a new response with the given status, header and content. */
  def apply(
        status: Int,
        headers: (String, String)*
      )(
        content: Array[Byte] = null
      ): Response =
    new Response(status, Headers(headers*), content)


  /**
   * Creates a "no-content" response. This is essentually a form of
   * the `apply` but having less brackets.
   */
  def noContent(
        status: Int = 204,
        headers: (String, String)*
      ): Response =
    new Response(status, Headers(headers*), null)


  /** Creates a simple text response in the UTF-8 encoding. */
  def text(
        status: Int = 200,
        headers: (String, String)*
      )(
        content: String
      ) :Response =
    var hdr = Headers(headers*)
    hdr.addIfNotSet("Content-Type" -> "text/plain;charset=UTF-8")
    new Response(status, hdr, content.getBytes("UTF-8"))
  end text
end Response
